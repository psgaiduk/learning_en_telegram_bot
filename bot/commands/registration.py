from aiogram import types
from requests import post

from bot import dispatcher
from functions import decode_telegram_id, encode_telegram_id
from settings import settings


@dispatcher.message_handler(state='REGISTRATION', commands=['start'])
async def handle_registration(message: types.Message):
    """Handle registration."""
    telegram_id = message.from_user.id

    url_create_user = f'{settings.api_url}/v1/telegram_user/'
    data_for_create_user = {
        'telegram_id': telegram_id,
        'level_en_id': 1,
        'main_language_id': 1,
        'experience': 0,
        'hero_level_id': 1,
        'previous_stage': '',
        'stage': 'WAIT_NAME',
    }
    post(url=url_create_user, headers=settings.api_headers, json=data_for_create_user)
    telegram_id_encode = await encode_telegram_id(telegram_id)
    telegram_link = f'https://t.me/{settings.bot_name}?start={telegram_id_encode}'
    text_greeting_answer = (
        'üëä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ö–ª—É–±!\n\n'
        '–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å, —Ç—ã –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:\n\n'
        '1Ô∏è‚É£ –ü–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –ö–ª—É–±–∞: —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤—Å–µ–º –æ–± –ê–Ω–≥–ª–∏–π—Å–∫–æ–º –ö–ª—É–±–µ. '
        f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ {telegram_link} –¥—Ä—É–∑—å—è–º, —á—Ç–æ–±—ã –æ–Ω–∏ —Ç–æ–∂–µ –º–æ–≥–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\n'
        '2Ô∏è‚É£ –í—Ç–æ—Ä–æ–µ –ø—Ä–∞–≤–∏–ª–æ: –ù–ò–ö–û–ì–î–ê –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –ø–µ—Ä–≤–æ–º –ø—Ä–∞–≤–∏–ª–µ. –ö—Å—Ç–∞—Ç–∏ –≤–æ—Ç —Å—Å—ã–ª–∫–∞ '
        f'{telegram_link}, —á—Ç–æ–±—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤—Å–µ–º.\n'
        '3Ô∏è‚É£ –¢—Ä–µ—Ç—å–µ –ø—Ä–∞–≤–∏–ª–æ: –ï—Å–ª–∏ —Ç—ã —Ç—É—Ç, —Ç–æ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å.'
    )
    await message.answer(text_greeting_answer)

    text_first_day_tasks_answer = (
        'üìù –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å:\n\n'
        '1Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Ñ–∏–ª—å" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.\n'
        '2Ô∏è‚É£ –ü—Ä–æ—á–∏—Ç–∞—Ç—å 5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.\n'
    )

    await message.answer(text_first_day_tasks_answer)

    if '/start' in message.text:
        friend_telegram_id = message.text.split('/start ')[1]
        if not friend_telegram_id:
            return None
        decode_friend_telegram_id = await decode_telegram_id(friend_telegram_id)
        url_create_referral = f'{settings.api_url}/v1/referrals/'
        data_for_create_referral = {
            'telegram_user_id': decode_friend_telegram_id,
            'friend_telegram_id': telegram_id,
        }
        post(url=url_create_referral, headers=settings.api_headers, json=data_for_create_referral)
