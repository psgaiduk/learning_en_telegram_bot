from http import HTTPStatus
from re import match

from aiogram.dispatcher.storage import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from bot import dispatcher
from context_managers import http_client
from settings import settings


@dispatcher.message_handler(lambda message: message.text and match(r'^[\w]+$', message.text), state='WAIT_NAME')
async def handle_wait_name(message: Message, state: FSMContext):
    """Handle wait name."""
    data = await state.get_data()
    telegram_user = data['user']
    telegram_id = telegram_user['telegram_id']
    new_name = message.text.title()

    inline_kb = InlineKeyboardMarkup()

    if telegram_user['previous_stage'] == 'NEW_CLIENT':
        stage = 'WAIT_EN_LEVEL'
        message_text = (f'–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_name}.\n'
                        f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –°–µ–π—á–∞—Å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã 2 –ø–µ—Ä–≤—ã—Ö —É—Ä–æ–≤–Ω—è, '
                        f'–Ω–æ —Å —É–≤–ª–µ—á–∏–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è, –±—É–¥—É—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏ –∑–Ω–∞–Ω–∏–π.')
        inline_kb.add(InlineKeyboardButton(text='A1 - Beginner', callback_data='level_en_1'))
        inline_kb.add(InlineKeyboardButton(text='A2 - Elementary', callback_data='level_en_2'))
        if telegram_user['hero_level']['order'] > 10:
            inline_kb.add(InlineKeyboardButton(text='B1 - Pre-intermediate', callback_data='level_en_3'))
        if telegram_user['hero_level']['order'] > 25:
            inline_kb.add(InlineKeyboardButton(text='B2 - Intermediate', callback_data='level_en_4'))
        if telegram_user['hero_level']['order'] > 50:
            inline_kb.add(InlineKeyboardButton(text='C1 - Upper-intermediate', callback_data='level_en_5'))
        if telegram_user['hero_level']['order'] > 80:
            inline_kb.add(InlineKeyboardButton(text='C2 - Advanced', callback_data='level_en_6'))

    else:
        stage = 'UPDATE_PROFILE'
        inline_kb.add(InlineKeyboardButton(text='Change english level', callback_data='user_profile_change_en_level'))
        inline_kb.add(InlineKeyboardButton(text='Change name', callback_data='user_pofile_change_name'))
        inline_kb.add(InlineKeyboardButton(text='Close', callback_data='user_profile_close'))
        message_text = f'–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_name}.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:'

    async with http_client() as client:
        url_update_telegram_user = f'{settings.api_url}/v1/telegram_user/{telegram_id}'
        data_for_update_user = {
            'telegram_id': telegram_id,
            'user_name': new_name,
            'stage': stage,
        }
        _, response_status = await client.patch(
            url=url_update_telegram_user,
            headers=settings.api_headers,
            json=data_for_update_user,
        )

    if response_status == HTTPStatus.OK:
        await message.answer(text=message_text, reply_markup=inline_kb)
    else:
        await message.answer(text='ü§ñ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —á—É—Ç—å –ø–æ–∑–∂–µ.')


@dispatcher.message_handler(lambda message: message.text and not match(r'^[\w]+$', message.text), state='WAIT_NAME')
async def handle_wait_name_incorrect_work(message: Message):
    """Handle wait name."""
    await message.answer('–ò–º—è –Ω–∞–¥–æ –≤–≤–æ–¥–∏—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ, –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')